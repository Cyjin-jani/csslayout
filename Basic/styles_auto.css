/* --------------------------------- */
/* Auto Columns and Rows */
/* --------------------------------- */


/* row 혹은 column 에 비해서 element들이 더 많은 경우, auto를 지정한다. */

/* auto-flow는 지정이 안되고 남는 element들이 있는 경우, 남는 요소들은 보통
row에 추가되는 것이 일반적인 기본값이지만, auto-flow를 지정해줌으로써 row 혹은 column으로 남은 요소들이 추가되도록 할 수 있다. */
/* 정확히는, 단순히 요소들이 추가 되는 것이 아니라, flex-direction처럼 아예 main axis(축)이 바뀌게 된다. (숫자를 보면 알 수 있음) */

/* .grid {
  display: grid;
  gap: 5px;
  color: white;
  height: 50vh;
  grid-template-columns: repeat(4, 100px);
  grid-template-rows: repeat(4, 100px);
  grid-auto-flow: column;
  grid-auto-columns: 100px;
} */
/* 만약 위와 같이 작성한다면, repeat에서 지정한 4개의 row/column들은 100px을 주고, 
나머지 row/column들에는 auto에서 지정한 대로 값을 주겠다는 것. */

/* .item:nth-child(odd) {
  background-color: #2ecc71;
}
.item:nth-child(even) {
  background-color: #3498db;
}
 */

 /* --------------------------------- */
/* minmax */
/* --------------------------------- */

/* minmax는 화면의 크기에 따라 요소가 줄어들 때 최소한 가져야 할 값과,
화면이 늘어날 때 최대로 가질 수 있는 값을 설정할 수 있다. */

 .grid {
  display: grid;
  gap: 5px;
  color: white;
  height: 50vh;
  grid-template-columns: repeat(10, minmax(70px, 1fr));
  grid-template-rows: repeat(4, 100px);
  grid-auto-columns: 100px;
} 

.item:nth-child(odd) {
  background-color: #2ecc71;
}
.item:nth-child(even) {
  background-color: #3498db;
}